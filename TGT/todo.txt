# Pre-Commit

# python

https://github.com/asottile/yesqa
https://github.com/asottile/blacken-docs
https://github.com/psf/black
https://github.com/PyCQA/flake8
   flags:
     - '--doctests'
     - '--exclude =.git,__pycache__'
     - '--ignore=F401,F403,F405'
     - '--max-complexity=10'
     - '--max-line-length=120'
     - '--select=E10,E11,E9,F4,F6,F7,F8'
     - '--show-source'
   exclude:
     - 'jupyter/jupyter_notebook_config.py'
     - 'setup.py'
https://github.com/PyCQA/pydocstyle
   flags:
     - '--ignore=D100,D103,D203'
   exclude:
     - 'jupyter/jupyter_notebook_config.py'
pycodestyle
   flags:
     # E703 statement ends with a semicolon.
     # Need for matplotlib in Jupyter notebooks.
     - '--ignore=E211,E231,E703,W291,W293'
     - '--max-line-length=120'
     # - '--show-source'  # Don't use!
   exclude:
     - 'jupyter/jupyter_notebook_config.py'
     - 'setup.py'
https://github.com/PyCQA/pylint
   flags:
     - '--max-line-length=120'
     - '--msg-template="{path}:{line}:{C}: {msg} ({symbol})"'
     - '--reports=n'
     - '--persistent=n'
   exclude:
     - 'jupyter/jupyter_notebook_config.py'
     - 'setup.py'
https://github.com/PyCQA/doc8
https://github.com/PyCQA/prospector
https://github.com/PyCQA/isort
https://github.com/miki725/importanize
https://github.com/sqlalchemyorg/zimports
https://github.com/peterdemin/pip-compile-multi
github.com/myint/rstcheck
github.com/myint/autoflake

github.com/editorconfig-checker/editorconfig-checker.python

github.com/igorshubovych/markdownlint-cli
github.com/markdownlint/markdownlint
mdformat has toc - does it work?
github.com/frnmst/md-toc
https://github.com/thlorenz/doctoc

languagetool?
alex?

Use .pre-commit github action rather than separate github actions?!!!

 BundleCheck: bundle check
 BundleOutdated: bundle outdated --strict --parseable
 ExecutePermissions: - if I follow google guide, there's something already
 FixMe = create?
 LocalPathsInGemfile: - create?
 BundleInstall: bundle install
 GitGuilt: - create hook via pr


proinsias.github.io and travis-lint

https://github.com/toy/image_optim/ - accepted my PR?
bundler-audit - may give ruby error - bundle-audit
markdownlint (ruby version) - may give ruby error
https://github.com/scivision/linkchecker-markdown - accepted my PR? Or just use script ?
markdown-link-check - add as pre-commit hook!
https://github.com/client9/misspell v https://github.com/codespell-project/codespell

patientroutesystems x2:

 ForecasterUpdater:
   description: 'Run forecaster updater'
   enabled: false
   required_executable: pr-apps/managed/forecaster/bin/updater-forecaster.sh
   quiet: false
 PRSUpdater:
   description: 'Run web app updater'
   enabled: true
   required_executable: ./hooks/updater-pr
   quiet: false

https://github.com/milin/giticket
github.com/myint/docformatter
github.com/sondrelg/pep585-upgrade
github.com/jendrikseipp/vulture
sqlint?
github.com/aorumbayev/pydantic-to-schema
above python

data-science:
gitlab.com/iamlikeme/nbhooks
github.com/kynan/nbstripout
sqlint?
github.com/nbQA-dev/nbQA
github.com/mwouts/jupytext
above python?

nameshark_vcard

https://github.com/milin/gitown
github.com/myint/docformatter
github.com/sondrelg/pep585-upgrade
github.com/jendrikseipp/vulture
github.com/mgedmin/check-manifest
above python

- name: Update TOC
  run: npx markdown-toc README.md -i
- name: Commit and push if README changed
  run: |-
    git diff
    git config --global user.email "readme-bot@example.com"
    git config --global user.name "README-bot"
    git diff --quiet || (git add README.md && git commit -m "Updated README")
    git push


https://github.com/pre-commit/mirrors-prettier


# GitHub Actions

https://github.com/marketplace/actions/run-markdownlint-with-reviewdog
https://github.com/marketplace/actions/run-pyflakes-with-reviewdog
https://github.com/marketplace?type=actions&query=slack

npm --version
reek --version
rubocop --version
ruby-lint --version
travis_retry python -m pip install --upgrade pip wheel
travis_retry python -m pip install --require-hashes --requirement \
requirements.txt
travis_retry python -m pip install --require-hashes --requirement \
dev-requirements.txt
overcommit --sign
overcommit --sign pre-commit
overcommit --run
python -m pytest

auto release?
auto changelog?


python 3.8 on linux
cache:
  apt: true
  bundler: true
  ccache: true
  pip: true
  directories:
    - "${HOME}/.cache/pip"
    - "${HOME}/.ccache"
    - "${HOME}/.pip-cache"
    - "${VIRTUAL_ENV}"
    - node_modules  # NPM packages



".codeclimate.yml"
".hound.yml"
".mdlrc"
".overcommit.yml"
".pylintrc"
"ci"/
"scripts"/

flake8
pytest


eslint:
jshint:
remark:
stylelint:


mergify.yml ??

overcommit ??


".varci.yml"

Add OSSAR action, ShiftLeft Scan action, CodeQL action, markdown-link-check action to these?

github-action-markdownlint-cli

markdown-link-check

MarkdownLint mdl Action

Lint Markdown

Run markdownlint (mdl)

https://github.com/marketplace/actions/image-actions
