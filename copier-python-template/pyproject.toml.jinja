[tool.poetry]
name = "{{ package_name_py }}"
version = "0.0.1"
description = "{{ project_description }}"
license = "Unlicense"
authors = ["{{ author_name }} <{{ author_email }}>"]
maintainers = []
repository = "{{ repository_provider }}/{{ repository_namespace }}/{{ package_name_py }}"
documentation = "{{ repository_provider }}/{{ repository_namespace }}/{{ package_name_py }}/docs"
readme = "README.md"
include = ["LICENSE"]
packages = [{ include = "{{project_name}}", from = "src" }]
keywords = []
classifiers = [
    "Development Status :: 1 - Planning",
    "License :: OSI Approved :: The Unlicense (Unlicense)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
] # https://pypi.org/classifiers/

[tool.poetry.urls]
"Bug Tracker" = "{{ repository_provider }}/{{ repository_namespace }}/{{ package_name_py }}/issues"

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.dev-dependencies]
black = "*"
flakehell = "*"
isort = "*"
{% if docs -%}
mkdocs = "*"
mkdocs-material = "*"
{%- endif %}
mypy = "*"
poethepoet = "*"
pre-commit = "*"
pytest = "*"

[tool.flakehell]
max_line_length = 88

[tool.flakehell.plugins]
mccabe = ["+*"]
pycodestyle = ["+*", "-E203", "-W503", "-W504"]
pyflakes = ["+*"]
pylint = ["+*"]

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
testpaths = ["tests"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
